/*
 * transmission-remote-java remote control for transmission daemon
 *
 * Copyright (C) 2009-2011 Dmytro Starzhynskyi (dvstar)
 * http://transmission-rj.sourceforge.net/
 * http://code.google.com/p/transmission-remote-java/
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package net.sf.dvstar.transmission.dialogs;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.List;
import java.util.Locale;
import javax.swing.event.ChangeEvent;
import net.sf.dvstar.transmission.utils.ConfigStorage;
import net.sf.dvstar.transmission.protocol.transmission.ProtocolConstants;
import java.util.Properties;
import java.util.StringTokenizer;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JColorChooser;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.event.ChangeListener;
import net.sf.dvstar.transmission.protocol.TransmissionManager;
import net.sf.dvstar.transmission.utils.LocalSettiingsConstants;
import net.sf.dvstar.transmission.utils.Tools;
import org.jdesktop.application.Action;


/*
 * ClientConfig.java
 *
 * Created on 03.06.2009, 15:29:34
 */
/**
 *
 * @author dstarzhynskyi
 */
public class ClientConfig extends javax.swing.JDialog implements ProtocolConstants, LocalSettiingsConstants {

    private List profileList = new ArrayList();
    TransmissionManager parent;
    ConfigStorage configStorage = new ConfigStorage();

    /** Creates new form ClientConfigDialog */
    public ClientConfig(TransmissionManager parent, boolean modal) {
        this(parent, modal, true);
    }
    public ClientConfig(TransmissionManager parent, boolean modal, boolean canCancel) {
        super(parent.getFrame(), modal);
        this.parent = parent;

        initComponents();

        cbDestination.removeAllItems();
        configStorage = parent.getGlobalConfigStorage();

        loadConfig();

        cbProfile.addActionListener(new ComboBoxProfileAction());
        lbColor_TR_STATUS_STOPPED.addMouseListener(new ColorMouseListener(this, lbColor_TR_STATUS_STOPPED, TR_STATUS_PAUSED));
        lbColor_TR_STATUS_CHECK_WAIT.addMouseListener(new ColorMouseListener(this, lbColor_TR_STATUS_CHECK_WAIT, TR_STATUS_CHECK_WAIT));
        lbColor_TR_STATUS_CHECK.addMouseListener(new ColorMouseListener(this, lbColor_TR_STATUS_CHECK, TR_STATUS_CHECK));
        lbColor_TR_STATUS_DOWNLOAD.addMouseListener(new ColorMouseListener(this, lbColor_TR_STATUS_DOWNLOAD, TR_STATUS_DOWNLOAD));
        lbColor_TR_STATUS_SEED.addMouseListener(new ColorMouseListener(this, lbColor_TR_STATUS_SEED, TR_STATUS_SEED));

        lbColor_PB_25_B.addMouseListener(new ColorMouseListener(this, lbColor_PB_25_B, PB_25_B));
        lbColor_PB_50_B.addMouseListener(new ColorMouseListener(this, lbColor_PB_50_B, PB_50_B));
        lbColor_PB_75_B.addMouseListener(new ColorMouseListener(this, lbColor_PB_75_B, PB_75_B));
        lbColor_PB_100_B.addMouseListener(new ColorMouseListener(this, lbColor_PB_100_B, PB_100_B));
        lbColor_PB_100_A.addMouseListener(new ColorMouseListener(this, lbColor_PB_100_A, PB_100_A));

        btCancel.setEnabled(canCancel);
        btCancel.setFocusable(canCancel);


    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel7 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tfConnHost = new javax.swing.JTextField();
        tfConnPort = new javax.swing.JTextField();
        tfConnRefresh = new javax.swing.JTextField();
        tfConnTryCount = new javax.swing.JTextField();
        chbConnUseSSL = new javax.swing.JCheckBox();
        chbConnAuto = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tfAuthLogin = new javax.swing.JTextField();
        pfAuthPasswd = new javax.swing.JPasswordField();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        chbConnUseAuth = new javax.swing.JCheckBox();
        jPanel10 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        tfProxyHost = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        tfProxyPort = new javax.swing.JTextField();
        chbProxyUse = new javax.swing.JCheckBox();
        jLabel9 = new javax.swing.JLabel();
        tfProxyLogin = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        chbProxyAuth = new javax.swing.JCheckBox();
        pfProxyPasswd = new javax.swing.JPasswordField();
        jLabel27 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        cbLocale = new javax.swing.JComboBox();
        jPanel11 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        lbColor_TR_STATUS_DOWNLOAD = new javax.swing.JLabel();
        lbColor_TR_STATUS_CHECK = new javax.swing.JLabel();
        lbColor_TR_STATUS_CHECK_WAIT = new javax.swing.JLabel();
        lbColor_TR_STATUS_SEED = new javax.swing.JLabel();
        lbColor_TR_STATUS_STOPPED = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        lbColor_PB_25_B = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        lbColor_PB_50_B = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        lbColor_PB_75_B = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        lbColor_PB_100_B = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        lbColor_PB_100_A = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        cbDestination = new javax.swing.JComboBox();
        jLabel28 = new javax.swing.JLabel();
        cbConfigDestination = new javax.swing.JComboBox();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        cbProfile = new javax.swing.JComboBox();
        btAddProfile = new javax.swing.JButton();
        btDelProfile = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btClose = new javax.swing.JButton();
        btSaveClose = new javax.swing.JButton();
        btCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(net.sf.dvstar.transmission.TransmissionApp.class).getContext().getResourceMap(ClientConfig.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N

        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(420, 180));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel3.setName("jPanel3"); // NOI18N
        jPanel3.setPreferredSize(new java.awt.Dimension(300, 230));
        jPanel3.setLayout(new java.awt.BorderLayout());

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTabbedPane1.setName("jTabbedPane1"); // NOI18N
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(608, 230));

        jPanel7.setName("jPanel7"); // NOI18N

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        tfConnHost.setName("tfConnHost"); // NOI18N

        tfConnPort.setName("tfConnPort"); // NOI18N

        tfConnRefresh.setName("tfConnRefresh"); // NOI18N

        tfConnTryCount.setName("tfConnTryCount"); // NOI18N

        chbConnUseSSL.setText(resourceMap.getString("chbConnUseSSL.text")); // NOI18N
        chbConnUseSSL.setName("chbConnUseSSL"); // NOI18N

        chbConnAuto.setText(resourceMap.getString("chbConnAuto.text")); // NOI18N
        chbConnAuto.setName("chbConnAuto"); // NOI18N

        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N

        tfAuthLogin.setColumns(10);
        tfAuthLogin.setName("tfAuthLogin"); // NOI18N

        pfAuthPasswd.setColumns(10);
        pfAuthPasswd.setText(resourceMap.getString("pfAuthPasswd.text")); // NOI18N
        pfAuthPasswd.setName("pfAuthPasswd"); // NOI18N

        jLabel25.setText(resourceMap.getString("jLabel25.text")); // NOI18N
        jLabel25.setName("jLabel25"); // NOI18N

        jLabel26.setText(resourceMap.getString("jLabel26.text")); // NOI18N
        jLabel26.setName("jLabel26"); // NOI18N

        chbConnUseAuth.setSelected(true);
        chbConnUseAuth.setText(resourceMap.getString("chbConnUseAuth.text")); // NOI18N
        chbConnUseAuth.setName("chbConnUseAuth"); // NOI18N

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel26, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 490, Short.MAX_VALUE)
                    .addComponent(jLabel25, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 490, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(tfConnTryCount, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                                    .addComponent(tfConnPort, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                                    .addComponent(tfConnRefresh, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                                    .addComponent(tfConnHost, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(14, 14, 14)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(chbConnAuto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(chbConnUseSSL, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(pfAuthPasswd, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                                    .addComponent(tfAuthLogin, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(chbConnUseAuth, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(544, 544, 544))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfConnHost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chbConnAuto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfConnPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tfConnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chbConnUseSSL))
                .addGap(9, 9, 9)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(tfConnTryCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addComponent(jLabel26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(tfAuthLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chbConnUseAuth))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(pfAuthPasswd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(50, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel7.TabConstraints.tabTitle"), jPanel7); // NOI18N

        jPanel10.setName("jPanel10"); // NOI18N

        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N

        tfProxyHost.setName("tfProxyHost"); // NOI18N

        jLabel8.setText(resourceMap.getString("jLabel8.text")); // NOI18N
        jLabel8.setName("jLabel8"); // NOI18N

        tfProxyPort.setName("tfProxyPort"); // NOI18N

        chbProxyUse.setText(resourceMap.getString("chbProxyUse.text")); // NOI18N
        chbProxyUse.setName("chbProxyUse"); // NOI18N

        jLabel9.setText(resourceMap.getString("jLabel9.text")); // NOI18N
        jLabel9.setName("jLabel9"); // NOI18N

        tfProxyLogin.setEnabled(false);
        tfProxyLogin.setName("tfProxyLogin"); // NOI18N

        jLabel10.setText(resourceMap.getString("jLabel10.text")); // NOI18N
        jLabel10.setName("jLabel10"); // NOI18N

        chbProxyAuth.setText(resourceMap.getString("chbProxyAuth.text")); // NOI18N
        chbProxyAuth.setName("chbProxyAuth"); // NOI18N
        chbProxyAuth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbProxyAuthActionPerformed(evt);
            }
        });

        pfProxyPasswd.setText(resourceMap.getString("pfProxyPasswd.text")); // NOI18N
        pfProxyPasswd.setEnabled(false);
        pfProxyPasswd.setName("pfProxyPasswd"); // NOI18N

        jLabel27.setText(resourceMap.getString("jLabel27.text")); // NOI18N
        jLabel27.setName("jLabel27"); // NOI18N

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel10Layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pfProxyPasswd))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel10Layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfProxyHost))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel10Layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfProxyLogin))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel10Layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfProxyPort, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chbProxyUse, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                            .addComponent(chbProxyAuth, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel27)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(tfProxyHost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chbProxyUse))
                .addGap(6, 6, 6)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(tfProxyPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(tfProxyLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chbProxyAuth))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(pfProxyPasswd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(154, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel10.TabConstraints.tabTitle"), jPanel10); // NOI18N

        jPanel8.setName("jPanel8"); // NOI18N

        jLabel16.setText(resourceMap.getString("jLabel16.text")); // NOI18N
        jLabel16.setName("jLabel16"); // NOI18N

        cbLocale.setName("cbLocale"); // NOI18N

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbLocale, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(324, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(cbLocale, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(253, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel8.TabConstraints.tabTitle"), jPanel8); // NOI18N

        jPanel11.setName("jPanel11"); // NOI18N

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 504, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 289, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel11.TabConstraints.tabTitle"), jPanel11); // NOI18N

        jPanel12.setName("jPanel12"); // NOI18N
        jPanel12.setLayout(new java.awt.GridLayout(1, 2));

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel13.border.title"))); // NOI18N
        jPanel13.setName("jPanel13"); // NOI18N

        jLabel11.setText(resourceMap.getString("jLabel11.text")); // NOI18N
        jLabel11.setName("jLabel11"); // NOI18N

        jLabel12.setText(resourceMap.getString("jLabel12.text")); // NOI18N
        jLabel12.setName("jLabel12"); // NOI18N

        jLabel13.setText(resourceMap.getString("jLabel13.text")); // NOI18N
        jLabel13.setName("jLabel13"); // NOI18N

        jLabel14.setText(resourceMap.getString("jLabel14.text")); // NOI18N
        jLabel14.setName("jLabel14"); // NOI18N

        jLabel15.setText(resourceMap.getString("jLabel15.text")); // NOI18N
        jLabel15.setName("jLabel15"); // NOI18N

        lbColor_TR_STATUS_DOWNLOAD.setForeground(resourceMap.getColor("lbColor_TR_STATUS_DOWNLOAD.foreground")); // NOI18N
        lbColor_TR_STATUS_DOWNLOAD.setText(resourceMap.getString("lbColor_TR_STATUS_DOWNLOAD.text")); // NOI18N
        lbColor_TR_STATUS_DOWNLOAD.setName("lbColor_TR_STATUS_DOWNLOAD"); // NOI18N

        lbColor_TR_STATUS_CHECK.setForeground(resourceMap.getColor("lbColor_TR_STATUS_CHECK.foreground")); // NOI18N
        lbColor_TR_STATUS_CHECK.setText(resourceMap.getString("lbColor_TR_STATUS_CHECK.text")); // NOI18N
        lbColor_TR_STATUS_CHECK.setName("lbColor_TR_STATUS_CHECK"); // NOI18N

        lbColor_TR_STATUS_CHECK_WAIT.setForeground(resourceMap.getColor("lbColor_TR_STATUS_CHECK_WAIT.foreground")); // NOI18N
        lbColor_TR_STATUS_CHECK_WAIT.setText(resourceMap.getString("lbColor_TR_STATUS_CHECK_WAIT.text")); // NOI18N
        lbColor_TR_STATUS_CHECK_WAIT.setName("lbColor_TR_STATUS_CHECK_WAIT"); // NOI18N

        lbColor_TR_STATUS_SEED.setForeground(resourceMap.getColor("lbColor_TR_STATUS_SEED.foreground")); // NOI18N
        lbColor_TR_STATUS_SEED.setText(resourceMap.getString("lbColor_TR_STATUS_SEED.text")); // NOI18N
        lbColor_TR_STATUS_SEED.setName("lbColor_TR_STATUS_SEED"); // NOI18N

        lbColor_TR_STATUS_STOPPED.setForeground(resourceMap.getColor("lbColor_TR_STATUS_STOPPED.foreground")); // NOI18N
        lbColor_TR_STATUS_STOPPED.setText(resourceMap.getString("lbColor_TR_STATUS_STOPPED.text")); // NOI18N
        lbColor_TR_STATUS_STOPPED.setName("lbColor_TR_STATUS_STOPPED"); // NOI18N

        jLabel18.setText(resourceMap.getString("jLabel18.text")); // NOI18N
        jLabel18.setName("jLabel18"); // NOI18N

        lbColor_PB_25_B.setForeground(resourceMap.getColor("lbColor_PB_25_B.foreground")); // NOI18N
        lbColor_PB_25_B.setText(resourceMap.getString("lbColor_PB_25_B.text")); // NOI18N
        lbColor_PB_25_B.setName("lbColor_PB_25_B"); // NOI18N

        jLabel19.setText(resourceMap.getString("jLabel19.text")); // NOI18N
        jLabel19.setName("jLabel19"); // NOI18N

        lbColor_PB_50_B.setForeground(resourceMap.getColor("lbColor_PB_50_B.foreground")); // NOI18N
        lbColor_PB_50_B.setText(resourceMap.getString("lbColor_PB_50_B.text")); // NOI18N
        lbColor_PB_50_B.setName("lbColor_PB_50_B"); // NOI18N

        jLabel20.setText(resourceMap.getString("jLabel20.text")); // NOI18N
        jLabel20.setName("jLabel20"); // NOI18N

        lbColor_PB_75_B.setForeground(resourceMap.getColor("lbColor_PB_75_B.foreground")); // NOI18N
        lbColor_PB_75_B.setText(resourceMap.getString("lbColor_PB_75_B.text")); // NOI18N
        lbColor_PB_75_B.setName("lbColor_PB_75_B"); // NOI18N

        jLabel21.setText(resourceMap.getString("jLabel21.text")); // NOI18N
        jLabel21.setName("jLabel21"); // NOI18N

        lbColor_PB_100_B.setForeground(resourceMap.getColor("lbColor_PB_100_B.foreground")); // NOI18N
        lbColor_PB_100_B.setText(resourceMap.getString("lbColor_PB_100_B.text")); // NOI18N
        lbColor_PB_100_B.setName("lbColor_PB_100_B"); // NOI18N

        jLabel22.setText(resourceMap.getString("jLabel22.text")); // NOI18N
        jLabel22.setName("jLabel22"); // NOI18N

        lbColor_PB_100_A.setForeground(resourceMap.getColor("lbColor_PB_100_A.foreground")); // NOI18N
        lbColor_PB_100_A.setText(resourceMap.getString("lbColor_PB_100_A.text")); // NOI18N
        lbColor_PB_100_A.setName("lbColor_PB_100_A"); // NOI18N

        jLabel23.setText(resourceMap.getString("jLabel23.text")); // NOI18N
        jLabel23.setName("jLabel23"); // NOI18N

        jLabel24.setText(resourceMap.getString("jLabel24.text")); // NOI18N
        jLabel24.setName("jLabel24"); // NOI18N

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbColor_TR_STATUS_DOWNLOAD, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                            .addComponent(lbColor_TR_STATUS_SEED, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                            .addComponent(lbColor_TR_STATUS_STOPPED, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                            .addComponent(lbColor_TR_STATUS_CHECK, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                            .addComponent(lbColor_TR_STATUS_CHECK_WAIT, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                            .addComponent(lbColor_PB_25_B, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                            .addComponent(lbColor_PB_50_B, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                            .addComponent(lbColor_PB_75_B, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                            .addComponent(lbColor_PB_100_B, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                            .addComponent(lbColor_PB_100_A, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)))
                    .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addComponent(jLabel23)
                .addGap(10, 10, 10)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(lbColor_TR_STATUS_DOWNLOAD))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(lbColor_TR_STATUS_CHECK))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(lbColor_TR_STATUS_CHECK_WAIT))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(lbColor_TR_STATUS_SEED))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(lbColor_TR_STATUS_STOPPED))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(lbColor_PB_25_B))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(lbColor_PB_50_B))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(lbColor_PB_75_B))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(lbColor_PB_100_B))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(lbColor_PB_100_A))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel12.add(jPanel13);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel6.border.title"))); // NOI18N
        jPanel6.setName("jPanel6"); // NOI18N

        jLabel17.setText(resourceMap.getString("jLabel17.text")); // NOI18N
        jLabel17.setName("jLabel17"); // NOI18N

        cbDestination.setEditable(true);
        cbDestination.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbDestination.setName("cbDestination"); // NOI18N

        jLabel28.setText(resourceMap.getString("jLabel28.text")); // NOI18N
        jLabel28.setName("jLabel28"); // NOI18N

        cbConfigDestination.setEditable(true);
        cbConfigDestination.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbConfigDestination.setName("cbConfigDestination"); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbDestination, 0, 218, Short.MAX_VALUE)
                    .addComponent(jLabel17)
                    .addComponent(cbConfigDestination, 0, 218, Short.MAX_VALUE)
                    .addComponent(jLabel28))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbDestination, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel28)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbConfigDestination, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(168, Short.MAX_VALUE))
        );

        jPanel12.add(jPanel6);

        jTabbedPane1.addTab(resourceMap.getString("jPanel12.TabConstraints.tabTitle"), jPanel12); // NOI18N

        jPanel3.add(jTabbedPane1, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel3, java.awt.BorderLayout.CENTER);

        jPanel4.setName("jPanel4"); // NOI18N
        jPanel4.setPreferredSize(new java.awt.Dimension(130, 230));
        jPanel4.setLayout(new java.awt.GridLayout(2, 0));

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel5.border.title"))); // NOI18N
        jPanel5.setMinimumSize(new java.awt.Dimension(120, 127));
        jPanel5.setName("jPanel5"); // NOI18N

        cbProfile.setEditable(true);
        cbProfile.setName("cbProfile"); // NOI18N

        btAddProfile.setIcon(resourceMap.getIcon("btAddProfile.icon")); // NOI18N
        btAddProfile.setName("btAddProfile"); // NOI18N
        btAddProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddProfileActionPerformed(evt);
            }
        });

        btDelProfile.setIcon(resourceMap.getIcon("btDelProfile.icon")); // NOI18N
        btDelProfile.setName("btDelProfile"); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbProfile, 0, 96, Short.MAX_VALUE)
                    .addComponent(btAddProfile)
                    .addComponent(btDelProfile))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(cbProfile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btAddProfile)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btDelProfile)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        jPanel4.add(jPanel5);

        jPanel1.add(jPanel4, java.awt.BorderLayout.EAST);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel2.setName("jPanel2"); // NOI18N
        jPanel2.setPreferredSize(new java.awt.Dimension(400, 48));

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(net.sf.dvstar.transmission.TransmissionApp.class).getContext().getActionMap(ClientConfig.class, this);
        btClose.setAction(actionMap.get("saveConfigAction")); // NOI18N
        btClose.setIcon(resourceMap.getIcon("btClose.icon")); // NOI18N
        btClose.setText(resourceMap.getString("btClose.text")); // NOI18N
        btClose.setName("btClose"); // NOI18N
        btClose.setPreferredSize(new java.awt.Dimension(140, 26));

        btSaveClose.setAction(actionMap.get("saveConfigCloseAction")); // NOI18N
        btSaveClose.setIcon(resourceMap.getIcon("btSaveClose.icon")); // NOI18N
        btSaveClose.setText(resourceMap.getString("btSaveClose.text")); // NOI18N
        btSaveClose.setName("btSaveClose"); // NOI18N
        btSaveClose.setPreferredSize(new java.awt.Dimension(140, 26));

        btCancel.setAction(actionMap.get("closeDialogAction")); // NOI18N
        btCancel.setIcon(resourceMap.getIcon("btCancel.icon")); // NOI18N
        btCancel.setText(resourceMap.getString("btCancel.text")); // NOI18N
        btCancel.setName("btCancel"); // NOI18N
        btCancel.setPreferredSize(new java.awt.Dimension(140, 26));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btClose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btSaveClose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btCancel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(187, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btClose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btSaveClose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btCancel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        getContentPane().add(jPanel2, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btAddProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddProfileActionPerformed
        if (cbProfile.getSelectedItem() != null) {
            Object objRef = cbProfile.getSelectedItem();
            if (profileList != null && profileList.indexOf(objRef) < 0) {
                profileList.add(objRef);
                cbProfile.addItem(objRef);
            }
        }
    }//GEN-LAST:event_btAddProfileActionPerformed

    private void chbProxyAuthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbProxyAuthActionPerformed
        tfProxyLogin.setEnabled(chbProxyAuth.isSelected());
        pfProxyPasswd.setEnabled(chbProxyAuth.isSelected());
    }//GEN-LAST:event_chbProxyAuthActionPerformed

    @Action
    public void saveConfigCloseAction() {
        if(saveConfig()) closeDialogAction();
        else             JOptionPane.showMessageDialog(parent.getFrame(), "Error in save data !", "Save config", JOptionPane.ERROR_MESSAGE);

    }

    @Action
    public void closeDialogAction() {
        this.dispose();
    }

    @Action
    public void saveConfigAction() {
        if(!saveConfig()){
            JOptionPane.showMessageDialog(parent.getFrame(), "Error in save data !", "Save config", JOptionPane.ERROR_MESSAGE);
        }
    }

    private boolean checkDataField() {
        boolean ret = true;

        if(ret) ret=Tools.checkText(tfConnHost.getText());
        if(ret) ret=Tools.checkNumber(tfConnPort.getText());
        if(ret) {
            if(chbProxyUse.isSelected()){
                if(ret) ret=Tools.checkText(tfProxyHost.getText());
                if(ret) ret=Tools.checkNumber(tfProxyPort.getText());
            }
        }

        return ret;
    }
    private boolean saveConfig() {
        boolean ret = true;

        if (!checkDataField()) return false;

        Properties prop = new Properties();
        String configPrefix = "";

        Object objRef = cbProfile.getSelectedItem();
        int selIndex = cbProfile.getSelectedIndex();

        if (objRef != null) {
            configPrefix = objRef.toString();
        }

        configStorage.propertiesManager(CONF_CLI_CURRENTPROFILE, prop, configPrefix, DIR_GET, false);
        configStorage.propertiesManager(CONF_CLI_PROFILES, prop, profileList, DIR_GET, false);
        configStorage.propertiesManager(CONF_CLI_LOCALE, prop, cbLocale, DIR_GET);


        if (configPrefix != null && configPrefix.length() > 0) {
            configStorage.setDefaultProfile(configPrefix);
        }

        configStorage.propertiesManager(CONF_CLI_HOST, prop, tfConnHost, DIR_GET);
        configStorage.propertiesManager(CONF_CLI_PORT, prop, tfConnPort, DIR_GET);
        configStorage.propertiesManager(CONF_CLI_REFRESHRATE, prop, tfConnRefresh, DIR_GET);
        configStorage.propertiesManager(CONF_CLI_RETRYLIMIT, prop, tfConnTryCount, DIR_GET);

        configStorage.propertiesManager(CONF_CLI_PROXYHOST, prop, tfProxyHost, DIR_GET);
        configStorage.propertiesManager(CONF_CLI_PROXYPORT, prop, tfProxyPort, DIR_GET);
        configStorage.propertiesManager(CONF_CLI_PROXYUSER, prop, tfProxyLogin, DIR_GET);
        configStorage.propertiesManager(CONF_CLI_PROXYPASS, prop, pfProxyPasswd, DIR_GET);
        configStorage.propertiesManager(CONF_CLI_PROXYENABLED, prop, chbProxyUse, DIR_GET);
        configStorage.propertiesManager(CONF_CLI_PROXYAUTH, prop, chbProxyAuth, DIR_GET);

        configStorage.propertiesManager(CONF_CLI_USER, prop, tfAuthLogin, DIR_GET);
        configStorage.propertiesManager(CONF_CLI_PASS, prop, pfAuthPasswd, DIR_GET);
        configStorage.propertiesManager(CONF_CLI_USESSL, prop, chbConnUseSSL, DIR_GET);
        configStorage.propertiesManager(CONF_CLI_AUTOCONNECT, prop, chbConnAuto, DIR_GET);

        configStorage.propertiesManager(CONF_CLI_COL_STATUS_CHECK_WAIT, prop, lbColor_TR_STATUS_CHECK_WAIT.getForeground(), DIR_GET);
        configStorage.propertiesManager(CONF_CLI_COL_STATUS_CHECK, prop, lbColor_TR_STATUS_CHECK.getForeground(), DIR_GET);
        configStorage.propertiesManager(CONF_CLI_COL_STATUS_DOWNLOAD, prop, lbColor_TR_STATUS_DOWNLOAD.getForeground(), DIR_GET);
        configStorage.propertiesManager(CONF_CLI_COL_STATUS_SEED, prop, lbColor_TR_STATUS_SEED.getForeground(), DIR_GET);
        configStorage.propertiesManager(CONF_CLI_COL_STATUS_STOPPED, prop, lbColor_TR_STATUS_STOPPED.getForeground(), DIR_GET);

        configStorage.propertiesManager(CONF_CLI_COL_PB_025_B, prop, lbColor_PB_25_B.getForeground(), DIR_GET);
        configStorage.propertiesManager(CONF_CLI_COL_PB_050_B, prop, lbColor_PB_50_B.getForeground(), DIR_GET);
        configStorage.propertiesManager(CONF_CLI_COL_PB_075_B, prop, lbColor_PB_75_B.getForeground(), DIR_GET);
        configStorage.propertiesManager(CONF_CLI_COL_PB_100_B, prop, lbColor_PB_100_B.getForeground(), DIR_GET);
        configStorage.propertiesManager(CONF_CLI_COL_PB_100_A, prop, lbColor_PB_100_A.getForeground(), DIR_GET);

        String dstDirs = "";
        if (cbDestination.getItemCount() > 0) {
            for (int i = 0; i < cbDestination.getItemCount(); i++) {
                String delim = ",";
                if (i == cbDestination.getItemCount() - 1) {
                    delim = "";

                }
                dstDirs += cbDestination.getItemAt(i) + delim;
            }
        }
        configStorage.setProperty(CONF_CLI_USED_DIRS, dstDirs);
        configStorage.propertiesManager(CONF_CLI_USED_DIRS, prop, dstDirs, DIR_GET, false);


        configStorage.saveConfig(prop);

        return ret;
    }

    private void updateProfile(String curProfile) {
        Properties prop;
        ConfigStorage configStorage = new ConfigStorage();
        configStorage.loadConfig();

        prop = configStorage.getStoredConfig();

        if (curProfile.length() > 0) {
            configStorage.setDefaultProfile(curProfile);
            cbProfile.setSelectedItem(curProfile);
        }

        configStorage.propertiesManager(CONF_CLI_HOST, prop, tfConnHost, DIR_SET);
        configStorage.propertiesManager(CONF_CLI_PORT, prop, tfConnPort, DIR_SET, "9091");
        configStorage.propertiesManager(CONF_CLI_REFRESHRATE, prop, tfConnRefresh, DIR_SET, "15");
        configStorage.propertiesManager(CONF_CLI_RETRYLIMIT, prop, tfConnTryCount, DIR_SET, "5");

        configStorage.propertiesManager(CONF_CLI_PROXYHOST, prop, tfProxyHost, DIR_SET);
        configStorage.propertiesManager(CONF_CLI_PROXYPORT, prop, tfProxyPort, DIR_SET, "3128");
        configStorage.propertiesManager(CONF_CLI_PROXYUSER, prop, tfProxyLogin, DIR_SET);
        configStorage.propertiesManager(CONF_CLI_PROXYPASS, prop, pfProxyPasswd, DIR_SET);
        configStorage.propertiesManager(CONF_CLI_PROXYENABLED, prop, chbProxyUse, DIR_SET);
        configStorage.propertiesManager(CONF_CLI_PROXYAUTH, prop, chbProxyAuth, DIR_SET);

        configStorage.propertiesManager(CONF_CLI_USER, prop, tfAuthLogin, DIR_SET);
        configStorage.propertiesManager(CONF_CLI_PASS, prop, pfAuthPasswd, DIR_SET);
        configStorage.propertiesManager(CONF_CLI_USESSL, prop, chbConnUseSSL, DIR_SET);
        configStorage.propertiesManager(CONF_CLI_AUTOCONNECT, prop, chbConnAuto, DIR_SET);

        Color col = null;
        col = configStorage.propertiesManager(CONF_CLI_COL_STATUS_CHECK_WAIT, prop, lbColor_TR_STATUS_CHECK_WAIT.getForeground(), DIR_SET);
        if (col != null) {
            lbColor_TR_STATUS_CHECK_WAIT.setForeground(col);
        }
        col = configStorage.propertiesManager(CONF_CLI_COL_STATUS_CHECK, prop, lbColor_TR_STATUS_CHECK.getForeground(), DIR_SET);
        if (col != null) {
            lbColor_TR_STATUS_CHECK.setForeground(col);
        }
        col = configStorage.propertiesManager(CONF_CLI_COL_STATUS_DOWNLOAD, prop, lbColor_TR_STATUS_DOWNLOAD.getForeground(), DIR_SET);
        if (col != null) {
            lbColor_TR_STATUS_DOWNLOAD.setForeground(col);
        }
        col = configStorage.propertiesManager(CONF_CLI_COL_STATUS_SEED, prop, lbColor_TR_STATUS_SEED.getForeground(), DIR_SET);
        if (col != null) {
            lbColor_TR_STATUS_SEED.setForeground(col);
        }
        col = configStorage.propertiesManager(CONF_CLI_COL_STATUS_STOPPED, prop, lbColor_TR_STATUS_STOPPED.getForeground(), DIR_SET);
        if (col != null) {
            lbColor_TR_STATUS_STOPPED.setForeground(col);
        }

        col = configStorage.propertiesManager(CONF_CLI_COL_PB_025_B, prop, lbColor_PB_25_B.getForeground(), DIR_SET);
        if (col != null) {
            lbColor_PB_25_B.setForeground(col);
        }
        col = configStorage.propertiesManager(CONF_CLI_COL_PB_050_B, prop, lbColor_PB_50_B.getForeground(), DIR_SET);
        if (col != null) {
            lbColor_PB_50_B.setForeground(col);
        }
        col = configStorage.propertiesManager(CONF_CLI_COL_PB_075_B, prop, lbColor_PB_75_B.getForeground(), DIR_SET);
        if (col != null) {
            lbColor_PB_75_B.setForeground(col);
        }
        col = configStorage.propertiesManager(CONF_CLI_COL_PB_100_B, prop, lbColor_PB_100_B.getForeground(), DIR_SET);
        if (col != null) {
            lbColor_PB_100_B.setForeground(col);
        }
        col = configStorage.propertiesManager(CONF_CLI_COL_PB_100_A, prop, lbColor_PB_100_A.getForeground(), DIR_SET);
        if (col != null) {
            lbColor_PB_100_A.setForeground(col);
        }

        List<Locale> listLocales = Tools.getListOfAvailLanguages();

        for (int i = 0; i < listLocales.size(); i++) {
            String country = listLocales.get(i).getCountry().toUpperCase();
            if(country.length()>0) {
                country = "_" + country;
            }
            cbLocale.addItem(listLocales.get(i).getLanguage()+country ); //getDisplayLanguage(Locale.ENGLISH));
        }

        Locale defaultLocale = parent.getDefaultLocale();
        String country = defaultLocale.getCountry().length()>0?"_"+defaultLocale.getCountry().toUpperCase():"";
        String defaultLocaleString = defaultLocale.getLanguage()+country;
        //!!parent.tracePrint(true, "LOCALE "+defaultLocale + " "+defaultLocale.getDisplayCountry()+" " +defaultLocale.getCountry()+" "+defaultLocale.getDisplayLanguage());
        cbLocale.setSelectedItem(defaultLocaleString);

        //!!configStorage.propertiesManager(CONF_CLI_AUTOCONNECT, prop, chbConnAuto, DIR_SET);

        String dlist = configStorage.getProperty(CONF_CLI_USED_DIRS);
        if (dlist != null && dlist.length()>0) {

            StringTokenizer stoken = new StringTokenizer(dlist, ",");
            if (stoken.countTokens() > 0) {
                Vector dirList = new Vector();
                while (stoken.hasMoreElements()) {
                    //values.add(stoken.nextToken());
                    String itemList = stoken.nextToken();
                    if(!dirList.contains(itemList) && itemList.startsWith("/")){
                        cbDestination.addItem(itemList);
                        dirList.add(itemList);
                    }
                    Collections.sort(dirList);
                }
            } else {
                //values.add(dlist);
                cbDestination.addItem(dlist);
            }

        }
        cbDestination.addActionListener(new MyActionListener());

    }

    @Action
    private void loadConfig() {
        Properties prop;
        configStorage.loadConfig();
        prop = configStorage.getStoredConfig();
        String curProfile = "";

        //ConfigStorage.setPropertiesPrefix("");
        curProfile = configStorage.propertiesManager(CONF_CLI_CURRENTPROFILE, prop, curProfile, DIR_SET, false);
        profileList = configStorage.propertiesManager(CONF_CLI_PROFILES, prop, profileList, DIR_SET, false);

        if (profileList != null && profileList.size() > 0) {
            cbProfile.removeAllItems();
            for (int i = 0; i < profileList.size(); i++) {
                cbProfile.addItem(profileList.get(i));
            }
        }

        if (curProfile.length() > 0) {
            //ConfigStorage.setPropertiesPrefix(curProfile);
            cbProfile.setSelectedItem(curProfile);
        }
        updateProfile(curProfile);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAddProfile;
    private javax.swing.JButton btCancel;
    private javax.swing.JButton btClose;
    private javax.swing.JButton btDelProfile;
    private javax.swing.JButton btSaveClose;
    private javax.swing.JComboBox cbConfigDestination;
    private javax.swing.JComboBox cbDestination;
    private javax.swing.JComboBox cbLocale;
    private javax.swing.JComboBox cbProfile;
    private javax.swing.JCheckBox chbConnAuto;
    private javax.swing.JCheckBox chbConnUseAuth;
    private javax.swing.JCheckBox chbConnUseSSL;
    private javax.swing.JCheckBox chbProxyAuth;
    private javax.swing.JCheckBox chbProxyUse;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lbColor_PB_100_A;
    private javax.swing.JLabel lbColor_PB_100_B;
    private javax.swing.JLabel lbColor_PB_25_B;
    private javax.swing.JLabel lbColor_PB_50_B;
    private javax.swing.JLabel lbColor_PB_75_B;
    private javax.swing.JLabel lbColor_TR_STATUS_CHECK;
    private javax.swing.JLabel lbColor_TR_STATUS_CHECK_WAIT;
    private javax.swing.JLabel lbColor_TR_STATUS_DOWNLOAD;
    private javax.swing.JLabel lbColor_TR_STATUS_SEED;
    private javax.swing.JLabel lbColor_TR_STATUS_STOPPED;
    private javax.swing.JPasswordField pfAuthPasswd;
    private javax.swing.JPasswordField pfProxyPasswd;
    private javax.swing.JTextField tfAuthLogin;
    private javax.swing.JTextField tfConnHost;
    private javax.swing.JTextField tfConnPort;
    private javax.swing.JTextField tfConnRefresh;
    private javax.swing.JTextField tfConnTryCount;
    private javax.swing.JTextField tfProxyHost;
    private javax.swing.JTextField tfProxyLogin;
    private javax.swing.JTextField tfProxyPort;
    // End of variables declaration//GEN-END:variables

    public class ComboBoxProfileAction implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            String curProfile = cbProfile.getSelectedItem().toString();
            System.out.println("curProfile=" + curProfile);
            updateProfile(curProfile);
        }
    }

    class ColorMouseListener implements MouseListener, ChangeListener {

        private JColorChooser tcc;
        private final int status;
        private final JDialog parent;
        private Color currColor;
        private JComponent compon;

        public ColorMouseListener(JDialog parent, JComponent comp, int status) {
            this.status = status;
            this.parent = parent;
            this.compon = comp;
            currColor = compon.getForeground();
            tcc = new JColorChooser(currColor);
            tcc.getSelectionModel().addChangeListener(this);
        }

        @Override
        public void mouseClicked(MouseEvent e) {
            tcc.setVisible(true);
            currColor = tcc.showDialog(parent, "Foreground for ...", currColor);
            if (currColor != null) {
                compon.setForeground(currColor);
            }
        }

        @Override
        public void mousePressed(MouseEvent e) {
        }

        @Override
        public void mouseReleased(MouseEvent e) {
        }

        @Override
        public void mouseEntered(MouseEvent e) {
        }

        @Override
        public void mouseExited(MouseEvent e) {
        }

        @Override
        public void stateChanged(ChangeEvent e) {
            currColor = tcc.getColor();
            lbColor_TR_STATUS_STOPPED.setForeground(currColor);
        }
    }


    class MyActionListener implements ActionListener, ItemListener {

        Object oldItem;
        private String dstDir;

        @Override
        public void actionPerformed(ActionEvent evt) {
            JComboBox cb = (JComboBox) evt.getSource();
            Object newItem = cb.getSelectedItem();

            dstDir = cb.getSelectedItem().toString();


            JComboBox anCombo = (JComboBox) evt.getSource();
            DefaultComboBoxModel comboModel = (DefaultComboBoxModel) anCombo.getModel();
            int index = comboModel.getIndexOf(anCombo.getSelectedItem());
            if (index == -1) {
                comboModel.addElement(anCombo.getSelectedItem());
            }//else already added

            /*
            System.out.println("+++++++"+newItem+"="+oldItem);

            boolean same = newItem.equals(oldItem);
            oldItem = newItem;


            if (!same) {
            if(((MyComboBoxModel) cb.getModel()).getValues().indexOf(newItem)<0){
            ((MyComboBoxModel) cb.getModel()).getValues().add(newItem);
            System.out.println("======="+cb.getItemCount());

            }
            }

            if ("comboBoxEdited".equals(evt.getActionCommand())) {
            // User has typed in a string; only possible with an editable combobox
            System.out.println("======="+evt);
            } else if ("comboBoxChanged".equals(evt.getActionCommand())) {
            }
             */
        }

        @Override
        public void itemStateChanged(ItemEvent e) {
        }
    }

}
